import '../../yao/sass/index.scss';
import HashHistory from 'react-router/lib/HashHistory';
import React, { Component, PropTypes} from 'react';

import { Provider } from 'react-redux';
import { Router, Route } from 'react-router';

import Loader from '../../common/js/components/Loader.react'
import Alert from '../../common/js/components/Alert.react'
import Confirm from '../../common/js/components/Confirm.react'
import Popup from '../../common/js/components/Popup.react'
import Toast from '../../common/js/components/Toast'

//import Home from '../../yao/js/components/Home.react';
import OrderInfo from '../../yao/js/components/OrderInfo.react';
import OrderList from '../../yao/js/components/OrderList.react';
import Search from '../../yao/js/components/Search.react';
import Detail from '../../yao/js/components/Detail.react';
import Category from '../../yao/js/components/Category.react';
import AddressList from '../../yao/js/components/AddressList.react';
import AddressDetail from '../../yao/js/components/AddressDetail.react';
import AddressLocation from '../../yao/js/components/AddressLocation.react';
import MedicationSuggestion from '../../yao/js/components/MedicationSuggestion.react';
import TransferPage from '../../yao/js/components/TransferPage.react';
import RegionSelect from '../../yao/js/components/RegionSelect.react';
//import O2O from '../../yao/js/components/O2O.react';
import CategoryList from '../../yao/js/components/CategoryList.react';
import Cart from '../../yao/js/components/Cart.react';
import FillorderCard from '../../yao/js/components/FillorderCard.react';
import PaySuccess from '../../yao/js/components/PaySuccess.react';
import Chat from '../../yao/js/components/Chat.react';
import Recipes from '../../yao/js/components/Recipes.react';
import Subject from '../../yao/js/components/Subject.react';
import Logistics from '../../yao/js/components/Logistics.react';
//import Lucky from '../../yao/js/components/Lucky.react';
import Login from '../../yao/js/components/Login.react';
import Fail from '../../yao/js/components/Fail.react';
import ChopProducts from '../../yao/js/components/ChopProducts.react';
import DuoJin from '../../yao/js/components/DuoJin.react';
import DuojinRule from '../../yao/js/components/DuojinRule.react';
import Home from '../../yao/js/components/ScHome.react';
import Positioning from '../../yao/js/components/Positioning.react';
import CityList from '../../yao/js/components/CityList.react.js';

import CartBubble from '../../yao/js/partial/CartBubble.react';

import store from './store';
import * as Actions from '../../yao/js/actions';
import bindActions from '../../yao/js/actions/bind';

import yaoCommon from '../../yao/js/common/common';

let Promise = require('es6-promise').Promise;

class App extends Component {

  constructor(props) {
    super(props);
  }

  render() {
    // if (!this.state.isShow) return null;
    // Injected by React Router
    const { location, children } = this.props;
    const { pathname } = location;

    const value = pathname.split('/')[1] || 'yao-home';
    return (
      <div className={'page-' + value}>
        {children}
        <Loader />
        <Alert />
        <Confirm />
        <Popup />
        <CartBubble />
        <Toast />
      </div>
    );
  }
}

function getCart(appName) {
  bindActions.getCartV2(appName == "PAJK"? 0 : 1).then((state)=>{
    bindActions.checkO2OProductsByStoreIds(state.yao_address.yao_stores);
  });
}

function onenter (nextState,transition) {
  console.log(nextState);
  // TODO 如果后续有要登录的需求可以拿回来了这里先注释掉了,应为cdm要在onenter之后才调用
  //if(!yaoCommon.hadSignIn()){
    //transition.to('/yao-login',{
      //returnUrl: nextState.location.pathname
    //});
  //}
}
function onleave(){
  store.dispatch(CommonActions.hideAll());
}
class Root extends Component {
  render() {
    return (
      <Provider store={store}>
        {() =>
          <Router history={this.props.history}>
            <Route component={App}>
              <Route path="/" component={Home}/>
              <Route path="yao-home" component={Home}/>
              <Route path="yao-orderlist" component={OrderList} onEnter = {onenter}/>
              <Route path="yao-orderinfo/:orderId" component={OrderInfo} onEnter = {onenter}/>
              <Route path="OrderInfo/:orderId" component={OrderInfo} onEnter = {onenter}/>
              <Route path="yao-search/:bizType/:isAdvancedSearch(/:keyword)" component={Search}/>
              <Route path="yao-detail/:productId(/:storeId)(/:showFooter)" component={Detail}  onLeave={onleave}/>
              <Route path="yao-category/:bizType/:cateid" component={Category}/>
              <Route path="yao-addresslist(/:bizType)" component={AddressList} onEnter = {onenter}/>
              <Route path="yao-addressdetail(/:bizType)" component={AddressDetail} onEnter = {onenter}/>
              <Route path="yao-addresslocation(/:region)" component={AddressLocation} onEnter = {onenter}/>
              <Route path="yao-suggestion/:doctorid/:keywords" component={MedicationSuggestion} onEnter = {onenter}/>
              <Route path="yao-regionselect" component={RegionSelect}/>
              <Route path="yao-o2o" component={Home} onEnter = {onenter}/>
              <Route path="yao-categorylist(/:bizType)" component={CategoryList}/>
              <Route path="yao-cart/:type" component={Cart} onEnter = {onenter}/>
              <Route path="yao-chat/:msg_type/:role/:msg" component={Chat} onEnter = {onenter}/>
              <Route path="yao-chat/:msg_type/:role/" component={Chat} onEnter = {onenter}/>
              <Route path="yao-chat(/:role)" component={Chat} onEnter = {onenter}/>
              <Route path="yao-paysuccess/:orderId(&status=I)" component={PaySuccess} onEnter = {onenter}/>
              <Route path="yao-positioning" component={Positioning} onEnter = {onenter}/>
              <Route path="yao-cityList" component={CityList} onEnter = {onenter}/>
              <Route path="yao-recipes" component={Recipes} onEnter = {onenter}/>
              <Route path="recipes" component={Recipes} onEnter = {onenter}/>
              <Route path="yao-fillordercard/:type(/:param1(/:param2(/:param3)))" component={FillorderCard} onEnter = {onenter} onLeave={onleave}/>
              <Route path="activity/:activityId(/:index)" component={Subject} />
              <Route path="yao-logistics" component={Logistics} onEnter = {onenter}/>
              <Route path="yao-login" component={Login}/>
              <Route path="yao-logistics/:orderId" component={Logistics} onEnter = {onenter}/>
              <Route path="yao-fail" component={Fail} />
              <Route path="ChopProducts/:chopId" component={ChopProducts}/>
              <Route path="duojin" component={DuoJin}/>
              <Route path="duojin-rule" component={DuojinRule}/>
              <Route path="yao-transfer" component={TransferPage}/>
            </Route>
          </Router>
        }

      </Provider>
    );
  }
}

React.initializeTouchEvents(true);

//get cf_token
(function () {
  let UrlArray = window.location.hash.split("#");
  //是否有哈希的哈希
  if (UrlArray.length > 2) {
    let CF_TOKEN = UrlArray[UrlArray.length-1];
    window.localStorage.setItem('CF_TOKEN', CF_TOKEN);
    //alert(1);
    //location.href = location.origin + location.pathname + location.search + "#/"
  }
})()


Util.deviceReady(function(){
  // 接管native返回按钮
  let page = window.location.hash.split('/')[1] || 'home';
  // home页面暂时不能接管，因为home的Webview没有action 9,7的方法
  // TODO 这里还需要判断么
  if(page !== 'home' && page !== 'yao-chat'){
      var success = function(){};
      var error = function(){};
      var options = {
          "action": 9,
          "type": 7,
          "data": {
            "catchBack": "yes"
          },
          "source": 1
      }
      pajkPostMessage(success, error, options);
  }
  // 获取渠道标识
	pajkPostMessage(function(data) {
		Util.setChannel(data);
	}, null, {
    action: 8,
    type: 4,
    data: {},
    source: 2
	});
});

// 如果从支付成功页返回，关闭webview
window.pajkGoBack = function(options) {
    let pathAllHistory = store.getState().global.pathAllHistory;
    // 如果当前url为入口url, 则关闭webview
    if ( pathAllHistory.length && pathAllHistory.length === 1 && window.location.hash.replace("#", "") === pathAllHistory[0] && location.hash !== '#/duojin') {
        pajkPostMessage(null, null, {
          action: 8,
          type: 2,
          data: {},
          source: 1
        });
    } else {
      Util.goBack();
    }
};

window.pajkOnMessage = Util.msgMgr.pajkOnMessage;
Util.msgMgr.setHandler( (options) => {
  if (options && options.action === 1) {
    console.log('re show');
    // 重新显示webview时候重新拉购物车
    getCart(Util.getAppName());
    // 如果从其他页面返回首页, 拿回已经设置过的o2o地址
    // TODO 寻找更通用的方法
    let address = Util.getStoreFromCache('yao_address') || {};
    let allO2oAddress = address.yao_o2oAddress || {};
    let cachedO2oAddress = allO2oAddress[0];
    bindActions.setO2OAddress(cachedO2oAddress);
  }
});

// 退出APP时放开劫持返回按钮
// ios里不起作用, 还是要单独写
window.onbeforeunload = function() {
  yaoCommon.releaseWebview();
}

// 初次路径记录
recordPath();

// 记录访问路径
window.addEventListener('hashchange', () => {
  recordPath();
});

function recordPath() {
  if (window.location.hash.indexOf('/') !== -1) {
    let h = window.location.hash.replace("#", "");
    let fullPath = window.location.hash.split('#')[1];
    if(fullPath=="/")fullPath="/yao-home";
    store.dispatch(CommonActions.recordPathHistory(h));
    store.dispatch(Actions.recordPathHistoryPageId(fullPath));
  }
}

//获取APPNanme
bindActions.getAppName().then((state)=>{
  let appName = state.yao_global.appName;
  if(appName != "PAJK"){
    let style = document.createElement('style');
    let styleDetail = `.health-gold,.health-gold-amount,.health-gold-tag,.s-gprice{display:none !important}`;
    style.type = `text/css`;  
    if(style.styleSheet){       //ie下  
      style.styleSheet.cssText = styleDetail;  
     } else {  
       style.innerHTML = styleDetail;   //或者写成 nod.appendChild(document.createTextNode(str))  
     }  
     document.getElementsByTagName(`head`)[0].appendChild(style);
   }
}).catch((e)=>{console.log(e)});

// 获取外部经纬度信息
bindActions.getGpsOuter();

bindActions.getDocumentDoc('yao');

// 获取用户信息
bindActions.getUserInfoV2().then(() => {
  Util.onLoad.onLoadUserId();
  let user = store.getState().yao_global.user || {};
  let appName = store.getState().yao_global.appName;
  localStorage.setItem('USER_ID', user.id || 0);
  if (yaoCommon.hadSignIn()) {
    getCart(appName);
    // 获取用户地址信息
    bindActions.AddressesList().then(() => {
      // 设置默认地址为当前选择地址
      let allAddress = store.getState().yao_address.yao_getAllAddresses || [];
      let defaultAddress = allAddress.filter((element) => {
        return element.isDefault;
      });
      if (defaultAddress && defaultAddress.length) {
        bindActions.selectAddress(defaultAddress[0]);
      }
    });
  }

});

React.render(
  <Root history={new HashHistory()} />,
  document.getElementById('app')
);
